#ifndef WORLD_H
#define WORLD_H

///Includes 
//Librairies
#include <vector>
#include <string>
#include <glm/glm.hpp>
#include <glm/gtc/matrix_transform.hpp>
#include <glm/gtc/type_ptr.hpp>
//Project
#include "Chunk.h"
#include "Perlin.h"

class World
{
private:
	//Name used to Build/Load world files
	std::string directoryPath;
	//seed of the world (Randomly Generated by Default)
	unsigned int seed;
	//Chunk containing the Player
	glm::vec2 pChunk;
	//Perlin Noise Generator
	Perlin noiseGen;
	//Render Distance in Chunks
	float renderDistance;
	//Vector of the Chunks to load
	std::vector<glm::vec2> toLoad;


public:
	///CONSTRUCTOR AND DESTRUCTOR
	World(std::string Name, std::string characterName);
	~World();

	///METHODS
	//Method that check which chunks need to be loaded
	void setChunksToLoad();
};

#endif //WORLD_H